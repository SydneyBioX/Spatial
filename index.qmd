---
title: "Spatial analysis of high dimensional in situ imaging technologies"
toc-depth: 1
---

## Welcome! 
<img src="IMC_colon.png" align="right" style="height: 200px; border: 0px"/>



*Highly multiplexed cellular and subcellular imaging assays:* Recent advances in highly multiplexed cell imaging technologies have fundamentally revolutionized our ability to observe complex cellular relationships in tissue. Where previous immunohistochemistry protocols only allowed the visualization of cells that could be characterized by two or three surface proteins, cutting-edge technologies characterize cells with upwards of 50 proteins or 1000s of RNA in situ. Technologies such as **PhenoCycler, IMC, CosMx, Xenium, and MERFISH** (and many others) enable precise classification of cell sub-types and provide an unprecedented depiction of cellular heterogeneity in a tissue environment. These technical developments have necessitated the development of a variety of new analytical approaches that are required to harness these new imaging technologies. On this website we will demonstrate how packages in [scdney](https://sydneybiox.github.io/scdney/) can be used to provide new insights into complex biological systems and diseases.


## Our packages

```{=html}
<link rel="stylesheet" href="css/hexagons.css">
<ul id="hexGrid">


      <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="https://sydneybiox.github.io/MoleculeExperiment/">
            <img src="stickers/MoleculeExperiment.png" alt="" />
            <h1>MoleculeExperiment</h1>
            <p>Storage class for molecule data</p>
          </a>
        </div>
      </li>

      <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="https://sydneybiox.github.io/simpleSeg/">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/simpleSeg/SimpleSeg_Hex_standard.png?raw=true" alt="" />
            <h1>simpleSeg</h1>
            <p>Cell segmentation</p>
          </a>
        </div>
      </li>
      
      
            <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="https://sydneybiox.github.io/scMerge/">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/scMerge/scMerge.png?raw=true" alt="" />
            <h1>scMerge</h1>
            <p>Normalisation</p>
          </a>
        </div>
      </li>
      
      
      <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="http://www.bioconductor.org/packages/release/bioc/html/FuseSOM.html">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/FuseSOM/fuseSOM_ai_standard.png?raw=true" alt="" />
            <h1>FuseSOM</h1>
            <p>Cell type clustering</p>
          </a>
        </div>
      </li>
      
      
      <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="http://www.bioconductor.org/packages/release/bioc/html/treekoR.html">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/treekoR/treekoR.png?raw=true" alt="" />
            <h1>treekoR</h1>
            <p>Cell type hierarchy</p>
          </a>
        </div>
      </li>
      
      
      <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="http://www.bioconductor.org/packages/release/bioc/html/scFeatures.html">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/scFeatures/sticker_version2.png?raw=true" alt="" />
            <h1>scFeatures</h1>
            <p>Extract spatial features from data.</p>
          </a>
        </div>
      </li>
      
            <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="https://bioconductor.org/packages/release/bioc/html/scHOT.html">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/scHOT/scHOT_hex.png?raw=true" alt="" />
            <h1>scHOT</h1>
            <p>Higher order associations</p>
          </a>
        </div>
      </li>
      
      
      <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="https://ellispatrick.github.io/spicyR/">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/spicyR/spicyR_standard.png?raw=true" alt="" />
            <h1>spicyR</h1>
            <p>Spatial inference</p>
          </a>
        </div>
      </li>
      
      
      <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="https://sydneybiox.github.io/Statial/">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/Statial/statial.png?raw=true" alt="" />
            <h1>Statial</h1>
            <p>Spatial changes in cell state</p>
          </a>
        </div>
      </li>
      
      <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="https://ellispatrick.github.io/lisaClust/">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/lisaClust/lisaClust_sticker_ai_standard.png?raw=true" alt="" />
            <h1>lisaClust</h1>
            <p>Microenvironment identification</p>
          </a>
        </div>
      </li>
      
       <li class="hex">
        <div class="hexIn">
          <a class="hexLink" href="#">
            <img src="https://github.com/SydneyBioX/SydneyBioXStickers/blob/main/ClassifyR/classifyR.png?raw=true" alt="" />
            <h1>ClassifyR</h1>
            <p>Classification of samples</p>
          </a>
        </div>
      </li>     
      
    </ul>
```

## New header
What if I link this out?


```{=html}
<!-- Receiving HTML Document -->
<!DOCTYPE html>
<html>

<body>
<div id="importedContent"></div>
    <script>
        fetch('https://raw.githubusercontent.com/SydneyBioX/packageHeader/main/spatialHeader.html')
            .then(response => response.text())
            .then(htmlContent => {
                const importedContentDiv = document.getElementById('importedContent');
                importedContentDiv.innerHTML = htmlContent;
            })
            .catch(error => {
                console.error('Error fetching content:', error);
            });
    </script>
</body>
</html>

```


## test test testing