[
  {
    "objectID": "software.html#simpleseg",
    "href": "software.html#simpleseg",
    "title": "Software",
    "section": "simpleSeg",
    "text": "simpleSeg\n\nsimpleSeg provides a structured pipeline for segmentation of cellular tiff stacks and the normalization of features, priming cells for classification / clustering."
  },
  {
    "objectID": "software.html#scfeatures",
    "href": "software.html#scfeatures",
    "title": "Software",
    "section": "scFeatures",
    "text": "scFeatures\n\nscFeatures constructs multi-view representations of single-cell and spatial data. scFeatures is a tool that generates multi-view representations of single-cell and spatial data through the construction of a total of 17 feature types. These features can then be used for a variety of analyses using other software in Biocondutor."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Spatial analysis of high dimensional in situ imaging technologies",
    "section": "",
    "text": "Recent advances in highly multiplexed cell imaging technologies such as PhenoCycler, IMC, CosMx, Xenium, and MERFISH (and many more) have fundamentally revolutionized our ability to observe complex cellular relationships in tissue. Where previous immunohistochemistry protocols only allowed the visualization of cells that could be characterized by two or three surface proteins, cutting-edge technologies characterize cells with upwards of 50 proteins or 1000s of RNA in situ. These technologies enable precise classification of cell sub-types and provide an unprecedented depiction of cellular heterogeneity in a tissue environment. These technical developments have necessitated the development of a variety of new analytical approaches that are required to harness these new imaging technologies. On this website we will demonstrate how packages in scdney can be used to provide new insights into complex biological systems and diseases."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Spatial analysis of high dimensional in situ imaging technologies",
    "section": "",
    "text": "Recent advances in highly multiplexed cell imaging technologies such as PhenoCycler, IMC, CosMx, Xenium, and MERFISH (and many more) have fundamentally revolutionized our ability to observe complex cellular relationships in tissue. Where previous immunohistochemistry protocols only allowed the visualization of cells that could be characterized by two or three surface proteins, cutting-edge technologies characterize cells with upwards of 50 proteins or 1000s of RNA in situ. These technologies enable precise classification of cell sub-types and provide an unprecedented depiction of cellular heterogeneity in a tissue environment. These technical developments have necessitated the development of a variety of new analytical approaches that are required to harness these new imaging technologies. On this website we will demonstrate how packages in scdney can be used to provide new insights into complex biological systems and diseases."
  },
  {
    "objectID": "index.html#packages",
    "href": "index.html#packages",
    "title": "Spatial analysis of high dimensional in situ imaging technologies",
    "section": "Packages",
    "text": "Packages\n\n\n\n\n\n    \n\nDeeper explanations of the functionality of our software can be found in the Software tab"
  },
  {
    "objectID": "examples.html",
    "href": "examples.html",
    "title": "Spatial analysis applied to different technologies",
    "section": "",
    "text": "This page contains examples of how to different types of analysis. We have sorted these by technology, however we recommend focusing more on the questions that can be asked, rather than the technologies that were use to address them."
  },
  {
    "objectID": "examples.html#mibitof",
    "href": "examples.html#mibitof",
    "title": "Spatial analysis applied to different technologies",
    "section": "MIBITOF",
    "text": "MIBITOF\nMIBI-TOF (multiplexed ion beam imaging by time of flight) is an instrument that uses bright ion sources and orthogonal time-of-flight mass spectrometry to image metal-tagged antibodies at subcellular resolution in clinical tissue sections. The datasets we have seen image approximately 40 labeled antibodies and image fields of about \\(1mm^2\\) at resolutions down to \\(260nm\\)\n\nTriple Negative Breast Cancer - Keren_2018\nA MIBI-TOF dataset profiling tissue from triple-negative breast cancer patients is used to illustrate the functionality of our Statial package. That is, identifying changes in cell state that are related to spatial localisation of cells. This dataset simultaneously quantifies in situ expression of 36 proteins in 41 patients.\n Keren et al. (2018). A Structured Tumor-Immune Microenvironment in Triple Negative Breast Cancer Revealed by Multiplexed Ion Beam Imaging. Cell, 174(6), 1373-1387.e1319. (DOI) \n\n\nDuctal carcinoma in situ - Risom_2022\nA MIBI-TOF data profiling the spatial landscape of ductal carcinoma in situ (DCIS), which is a pre-invasive lesion that is thought to be a precursor to invasive breast cancer (IBC). This is currently the primary dataset used for illustration of our spicyWorkflow on Bioconductor. The key conclusion of this manuscript (amongst others) is that spatial information about cells can be used to predict disease progression in patients. We use a bunch of our packages to make a similar conclusion and cover topics such as cell segmentation, data normalisation, various tests of proportion and spatial localisation, microenvironment estimation and patient prediction.\n Risom et al. (2022). Transition to invasive breast cancer is associated with progressive changes in the structure and composition of tumor stroma. Cell, 185(2), 299-310.e18 (DOI)"
  },
  {
    "objectID": "examples.html#imaging-mass-cytometry",
    "href": "examples.html#imaging-mass-cytometry",
    "title": "Spatial analysis applied to different technologies",
    "section": "Imaging Mass Cytometry",
    "text": "Imaging Mass Cytometry"
  },
  {
    "objectID": "examples.html#phenocycler",
    "href": "examples.html#phenocycler",
    "title": "Spatial analysis applied to different technologies",
    "section": "Phenocycler",
    "text": "Phenocycler"
  },
  {
    "objectID": "examples.html#cosmx",
    "href": "examples.html#cosmx",
    "title": "Spatial analysis applied to different technologies",
    "section": "CosMx",
    "text": "CosMx"
  },
  {
    "objectID": "datasets/IMC_SCC.html",
    "href": "datasets/IMC_SCC.html",
    "title": "IMC squamous cell carcinoma",
    "section": "",
    "text": "library(spicyR)\nlibrary(lisaClust)\nlibrary(Statial)"
  },
  {
    "objectID": "datasets/IMC_SCC.html#test-links",
    "href": "datasets/IMC_SCC.html#test-links",
    "title": "IMC squamous cell carcinoma",
    "section": "Test links",
    "text": "Test links\nIf we put functions in the code, they automatically link to the help file Kontextual()."
  },
  {
    "objectID": "datasets/IMC_SCC.html#quarto",
    "href": "datasets/IMC_SCC.html#quarto",
    "title": "IMC squamous cell carcinoma",
    "section": "Quarto",
    "text": "Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "datasets/IMC_SCC.html#running-code",
    "href": "datasets/IMC_SCC.html#running-code",
    "title": "IMC squamous cell carcinoma",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About us",
    "section": "",
    "text": "There are many members of the Sydney Precision Data Science Centre at the University of Sydney who are working on spatial omics data. As a multidisciplinary team of researchers, we are focused on developing methods to help solve complex global problems, from designing predictive biomarkers of disease progression to ensuring the sustainability and quality of food production."
  },
  {
    "objectID": "about.html#key-involvement",
    "href": "about.html#key-involvement",
    "title": "About us",
    "section": "Key involvement",
    "text": "Key involvement\n\nResearch Leaders\n Dr Shila Ghazanfar\n Dr Ellis Patrick\n Prof Jean Yang\n\n\nContributors\n Farhan Ameen\n Alex Qin\n Nick Robertson"
  },
  {
    "objectID": "about.html#our-priorities",
    "href": "about.html#our-priorities",
    "title": "About us",
    "section": "Our priorities",
    "text": "Our priorities\nWe work on the principle that successful and sustainable collaboration grows organically within the right environment. To this end, our priorities for success are to:\n\nembrace data science challenges by developing innovative, fit-for-purpose applied methods in synergistic partnerships with key data-generating centres at Sydney and beyond\naddress data challenges with high societal impact and to build sustainable approaches\nprovide an incubator for interdisciplinary careers\nestablish a collaborative community that reflects and values diversity."
  },
  {
    "objectID": "datasets/Keren_2018/Keren_2018.html",
    "href": "datasets/Keren_2018/Keren_2018.html",
    "title": "Triple Negative Breast Cancer",
    "section": "",
    "text": "Statial is a Bioconductor package which contains a suite of complementary approaches for identifying changes in cell state and how these changes are associated with cell type localisation. The following will introduce functionality in the Statial package which can:\n\nModel spatial relationships between cells in the context of hierarchical cell lineage structures\nUncover changes in marker expression associated with cell proximities\nIdentify changes in cell state between distinct tissue environments\n\n\nIt is expected that you will have:\n\nBasic knowledge of R syntax\nFamiliarity with SingleCellExperiment and/or SpatialExperiment objects\n\nThe following will focus on the functionality of Statial, it will tangentially touch on other Bioconductor packages we have developed for these technologies such as spicyR, lisaClust and ClassifyR.\n\n\n\n\nIdentify methods which align with spatial hypotheses of interest.\nUnderstand the difference between the approaches and when they will be appropriate.\nAppreciate the limitations of the different approaches and when they will be uninformative.\n\n\nApply functions to identify various types of changes in cell state.\nInterpret output from tests and quantifications.\nEvaluate the appropriateness of different analytical approaches.\nAssess the performance of classification approaches that utilise cell state features."
  },
  {
    "objectID": "datasets/Keren_2018/Keren_2018.html#description",
    "href": "datasets/Keren_2018/Keren_2018.html#description",
    "title": "Triple Negative Breast Cancer",
    "section": "",
    "text": "Statial is a Bioconductor package which contains a suite of complementary approaches for identifying changes in cell state and how these changes are associated with cell type localisation. The following will introduce functionality in the Statial package which can:\n\nModel spatial relationships between cells in the context of hierarchical cell lineage structures\nUncover changes in marker expression associated with cell proximities\nIdentify changes in cell state between distinct tissue environments\n\n\nIt is expected that you will have:\n\nBasic knowledge of R syntax\nFamiliarity with SingleCellExperiment and/or SpatialExperiment objects\n\nThe following will focus on the functionality of Statial, it will tangentially touch on other Bioconductor packages we have developed for these technologies such as spicyR, lisaClust and ClassifyR.\n\n\n\n\nIdentify methods which align with spatial hypotheses of interest.\nUnderstand the difference between the approaches and when they will be appropriate.\nAppreciate the limitations of the different approaches and when they will be uninformative.\n\n\nApply functions to identify various types of changes in cell state.\nInterpret output from tests and quantifications.\nEvaluate the appropriateness of different analytical approaches.\nAssess the performance of classification approaches that utilise cell state features."
  },
  {
    "objectID": "datasets/Keren_2018/Keren_2018.html#installation",
    "href": "datasets/Keren_2018/Keren_2018.html#installation",
    "title": "Triple Negative Breast Cancer",
    "section": "Installation",
    "text": "Installation\n\nif (!requireNamespace(\"BiocManager\", quietly = TRUE)) {\n    install.packages(\"BiocManager\")\n}\n\nBiocManager::install(c(\"Statial\", \"spicyR\", \"lisaClust\", \"ClassifyR\", \"ggplot2\", \"SpatialExperiment\", \"dplyr\",\n                    \"tidyr\", \"ggsurvfit\", \"scater\", \"rappdirs\"))"
  },
  {
    "objectID": "datasets/Keren_2018/Keren_2018.html#load-packages",
    "href": "datasets/Keren_2018/Keren_2018.html#load-packages",
    "title": "Triple Negative Breast Cancer",
    "section": "Load packages",
    "text": "Load packages\n\nlibrary(StatialBioc2023)\nlibrary(Statial)\nlibrary(spicyR)\nlibrary(lisaClust)\nlibrary(ClassifyR)\nlibrary(ggplot2)\nlibrary(SpatialExperiment)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggsurvfit)\nlibrary(scater)\nlibrary(rappdirs)\n\ntheme_set(theme_classic())\nnCores &lt;- 1  # Feel free to parallelise things if you have the cores to spare.\n\nThe definitions of cell types and cell states are somewhat ambiguous. We will purposefully skirt the debate of what is a cell type vs cell state. Instead, in this workshop I would ask participants to associate cell state terminology to simply mean a varying phenotype (state) of a large cluster of similar cells (cell type). In this workshop we will examine two analytically distinct changes in cell state:\n\n\nA discrete change in state. Cell types (clusters of cells) are further clustered into sub-clusters. These finer-resolution phenotypes of the cell type are labelled as cell states.\n\n\nA continuous change in state. The state of a cell type is defined by variation in abundance of a gene or protein."
  },
  {
    "objectID": "datasets/Keren_2018/Keren_2018.html#the-data",
    "href": "datasets/Keren_2018/Keren_2018.html#the-data",
    "title": "Triple Negative Breast Cancer",
    "section": "The data",
    "text": "The data\nTo illustrate the functionality of Statial we will use a multiplexed ion beam imaging by time-of-flight (MIBI-TOF) dataset profiling tissue from triple-negative breast cancer patients\\(^1\\). This dataset simultaneously quantifies in situ expression of 36 proteins in 34 immune rich patients. Note: The data contains some “uninformative” probes and the original cohort included 41 patients.\nThe data is stored in a SpatialExperiment object called spe_Keren_2018. We can load the data and view some basic characteristics.\n\ncache &lt;- user_cache_dir()\nurl &lt;- \"https://www.maths.usyd.edu.au/u/ellisp/SpatialDatasets/spe_Keren_2018.rds\"\npath &lt;- file.path(cache, \"spe_Keren_2018.rds\") \n\n\n  if(!file.exists(path)) {\n    download.file(url=url, destfile=path)\n    }\n\n\n# Read in data\nspe_Keren_2018 &lt;- readRDS(path)\n\n# Store spatialCoords as a reducedDim for more plotting.\nreducedDim(spe_Keren_2018, \"spatialCoords\") &lt;- spatialCoords(spe_Keren_2018)\n\n# Add spatialCoords to colData also for plotting.\ncolData(spe_Keren_2018) &lt;- cbind(colData(spe_Keren_2018), spatialCoords(spe_Keren_2018))\n\n\n# Filter out samples with few immune cells and those without survival information.\nspe_Keren_2018 &lt;- spe_Keren_2018[,spe_Keren_2018$tumour_type!=\"cold\" & !is.na(spe_Keren_2018$`Survival_days_capped*`)]\n\nspe_Keren_2018\n\nclass: SpatialExperiment \ndim: 48 170171 \nmetadata(0):\nassays(1): intensities\nrownames(48): Na Si ... Ta Au\nrowData names(0):\ncolnames(170171): 1 2 ... 197677 197678\ncolData names(42): CellID imageID ... x y\nreducedDimNames(1): spatialCoords\nmainExpName: NULL\naltExpNames(0):\nspatialCoords names(2) : x y\nimgData names(1): sample_id\n\n\nAs our data is stored in a SpatialExperiment, with the spatialCoords also stored as a reducedDim, we can use scater to visualise our data in a lower dimensional embedding and look for image or cluster differences.\n\n# Perform dimension reduction using UMAP.\n# I have already run this and saved it in spe_Keren_2018 so that you can save time.\n#\nset.seed(51773)\nspe_Keren_2018 &lt;- scater::runUMAP(spe_Keren_2018, exprs_values = \"intensities\", name = \"UMAP\")\n\n# UMAP by imageID.\nscater::plotReducedDim(spe_Keren_2018, dimred = \"UMAP\", colour_by = \"cellType\")\n\n\n\n\n\nQuestion\n\nWhat does this UMAP tell us?\nWhat are some observations we could make if we coloured by imageID?"
  },
  {
    "objectID": "datasets/Keren_2018/Keren_2018.html#identifying-discrete-changes-in-cell-state-with-kontextual",
    "href": "datasets/Keren_2018/Keren_2018.html#identifying-discrete-changes-in-cell-state-with-kontextual",
    "title": "Triple Negative Breast Cancer",
    "section": "Identifying discrete changes in cell state with Kontextual",
    "text": "Identifying discrete changes in cell state with Kontextual\nCells states can be modelled as subclusters of a broader parent cell population. These subclusters, or states, are typically identified via a hierarchical clustering strategy. By framing cell states as discrete clusters, we are able to explore relationships as follows - cell type A has two states, with state 2 being closer to cell type B.\n\n\nKontext\n\nHere we introduce Kontextual. Kontextual models spatial relationships between cells in the context of hierarchical cell lineage structures. By assessing spatial relationships between pairs of cells in the context of other related cell types, Kontextual provides robust quantification of cell type relationships which are invariant to changes in tissue structure.\n\nFor the purposes of using Kontextual we treat cell states as identified clusters of cells, where larger clusters represent a “parent” cell population, and finer sub-clusters representing a “child” cell population. For example a CD4+ T cell may be considered a child to a larger parent population of T cells. Kontextual thus aims to quantify how the localisation patterns of a child population of cells deviate from the spatial behaviour of their parent population, and how that influences the localisation between the child cell state and another cell state.\nCell type hierarchy\nA key input for Kontextual is an annotation of cell type hierarchies. We will need these to organise all the cells present into cell state populations or clusters, e.g. all the different B cell types are put in a vector called bcells.\nTo make our lives easier, we will start by defining these here. I’m happy to talk about how we use our bioconductor package treekoR to define these hierarchies in a data driven way.\n\n# Set up cell populations\n\ntumour &lt;- c(\"Keratin_Tumour\", \"Tumour\")\n\nbcells &lt;- c(\"B_cell\")\ntcells &lt;- c(\"dn_T_cell\", \"CD4_T_cell\", \"CD8_T_cell\", \"Tregs\")\nmyeloid &lt;- c(\"Dc_or_Mono\", \"DC\", \"Mono_or_Neu\", \"Macrophages\", \"Other_Immune\", \"Neutrophils\")\n\nendothelial &lt;- c(\"Endothelial\")\nmesenchymal &lt;- c(\"Mesenchymal\")\n\ntissue &lt;- c(endothelial, mesenchymal)\nimmune &lt;- c(bcells, tcells, myeloid, \"NK\") \n\nall &lt;- c(tumour, tissue, immune, \"Unidentified\")\n\nDiscrete cell state changes within a single image\nHere we examine an image highlighted in the Keren et al. 2018 manuscript where the relationship between two cell types depends on a parent cell population. In image 6 of the Keren et al. dataset, we can see that p53+ tumour cells and immune cells are dispersed. However when the behaviour of p53+ tumour cells are placed in the context of the spatial behaviour of its broader parent population tumour cells, p53+ tumour cells and immune would appear localised.\n\n# Lets define a new cell type vector\nspe_Keren_2018$cellTypeNew &lt;- spe_Keren_2018$cellType\n\n# Select for all cells that express higher than baseline level of p53\np53Pos = assay(spe_Keren_2018)[\"p53\",] &gt; -0.300460\n\n# Find p53+ tumour cells\nspe_Keren_2018$cellTypeNew[spe_Keren_2018$cellType %in% tumour] &lt;- \"Tumour\"\nspe_Keren_2018$cellTypeNew[p53Pos & spe_Keren_2018$cellType %in% tumour] &lt;- \"p53_Tumour\"\n\n#Group all immune cells under the name \"Immune\"\n\nspe_Keren_2018$cellTypeNew[spe_Keren_2018$cellType %in% immune] &lt;- \"Immune\"\n\n# Add spatialCoords as a reduced dimension\n\n# Plot image 6\n\nspe_Keren_2018 |&gt;\n  colData() |&gt;\n  as.data.frame() |&gt;\n  filter(imageID == \"6\") |&gt;\n  filter(cellTypeNew %in% c(\"Immune\", \"Tumour\", \"p53_Tumour\")) |&gt;\n  arrange(cellTypeNew) |&gt;\n  ggplot(aes(x = x, y = y, color = cellTypeNew)) +\n  geom_point(size = 1) +\n  scale_colour_manual(values = c(\"#505050\", \"#64BC46\",\"#D6D6D6\")) + guides(colour = guide_legend(title = \"Cell types\", override.aes = list(size=3)))\n\n\n\n\nThe Kontextual function accepts a SingleCellExperiment object, or a single image, or list of images from a SingleCellExperiment object, this gets passed into the cells argument. The two cell types which will be evaluated are specified in the to and from arguments. A parent population must also be specified in the parent argument, note the parent cell population must include the to cell type. The argument r will specify the radius which the cell relationship will be evaluated on. Kontextual supports parallel processing, the number of cores can be specified using the cores argument. Kontextual can take a single value or multiple values for each argument and will test all combinations of the arguments specified.\nWe can calculate these relationships for a single radius.\n\np53_Kontextual &lt;- Kontextual(\n  cells = spe_Keren_2018,\n  image = 6,\n  r = 50,\n  from = \"p53_Tumour\",\n  to = \"Immune\",\n  parent = c(\"p53\", \"Tumour\"),\n  cellType = \"cellTypeNew\"\n)\n\np53_Kontextual\n\n  imageID               test  original kontextual  r weightQuantile inhom  edge\n1       6 p53_Tumour__Immune -21.35601    54.9888 50            0.8  TRUE FALSE\n  includeZeroCells window window.length\n1             TRUE convex            NA\n\n\nThe kontextCurve calculates the L-function value and Kontextual values over a range of radii. While kontextPlot plots these values. If the points lie above the red line (expected pattern) then localisation is indicated for that radius, if the points lie below the red line then dispersion is indicated. As seen in the following plot Kontextual is able to correctly identify localisation between p53+ tumour cells and immune cells in the example image for a certain range of radii. The original L-function is not able to identify localisation at any value of radii.\n\ncurves &lt;- kontextCurve(\n  cells = spe_Keren_2018,\n  image = \"6\",\n  from = \"p53_Tumour\",\n  to = \"Immune\",\n  parent = c(\"p53+Tumour\", \"Tumour\"),\n  rs = seq(10, 510, 100),\n  cellType = \"cellTypeNew\",\n  cores = nCores\n)\n\nkontextPlot(curves)\n\n\n\n\nAlternatively all pairwise cell relationships and their corresponding parents in the dataset can be tested. A data frame with all pairwise combinations can be creating using the parentCombinations function. This function takes in a vector of all the cells, as well as all the parent vectors set up earlier. As shown below the output is a data frame specifying the to, from, and parent arguments for Kontextual.\n\n# Get all relationships between cell types and their parents\nparentDf &lt;- parentCombinations(\n  all = all,\n  tumour,\n  bcells,\n  tcells,\n  myeloid,\n  endothelial,\n  mesenchymal,\n  tissue,\n  immune\n)\n\nDiscrete cell state changes across all images\nRather than specifying to, from, and parent in Kontextual, the output from parentCombinations can be input into Kontextual using the parentDf argument, to examine all pairwise relationships in the dataset. This chunk will take a signficant amount of time to run (~20 minutes).\n\n# Running Kontextual on all relationships across all images.\nkerenKontextual &lt;- Kontextual(\n  cells = spe_Keren_2018,\n  parentDf = parentDf,\n  r = 50,\n  cores = nCores\n)\n\n\nbigDiff &lt;- (kerenKontextual$original - kerenKontextual$kontextual)\nhead(kerenKontextual[order(bigDiff),], 10)\n\n      imageID                                 test   original kontextual  r\n14846       5          Tumour__Endothelial__tumour -22.329210   181.6454 50\n14968      32           Tumour__CD4_T_cell__tumour  37.890443   226.8310 50\n14902      32               Tumour__B_cell__tumour  71.070831   239.4044 50\n15193      23         Tumour__Other_Immune__tumour 102.570063   265.9990 50\n6879       28        Tregs__Keratin_Tumour__immune  -9.816640   146.5256 50\n12687      28        Tregs__Keratin_Tumour__tcells  -9.816640   141.6986 50\n4767       28  Mono_or_Neu__Keratin_Tumour__immune  -1.959462   149.2250 50\n15143       5          Tumour__Mono_or_Neu__tumour  -8.341033   126.4892 50\n10058       4 Neutrophils__Keratin_Tumour__myeloid  -7.267981   114.3391 50\n5306        4  Neutrophils__Keratin_Tumour__immune  -7.267981   111.0288 50\n      weightQuantile inhom  edge includeZeroCells window window.length\n14846            0.8  TRUE FALSE             TRUE convex            NA\n14968            0.8  TRUE FALSE             TRUE convex            NA\n14902            0.8  TRUE FALSE             TRUE convex            NA\n15193            0.8  TRUE FALSE             TRUE convex            NA\n6879             0.8  TRUE FALSE             TRUE convex            NA\n12687            0.8  TRUE FALSE             TRUE convex            NA\n4767             0.8  TRUE FALSE             TRUE convex            NA\n15143            0.8  TRUE FALSE             TRUE convex            NA\n10058            0.8  TRUE FALSE             TRUE convex            NA\n5306             0.8  TRUE FALSE             TRUE convex            NA\n\n\nAssociate discrete state changes with survival outcomes\nTo examine whether the features obtained from Statial are associated with patient outcomes or groupings, we can use the colTest function from SpicyR. To understand if survival outcomes differ significantly between 2 patient groups, specify type = \"survival\" in colTest. Here we examine which features are most associated with patient survival using the Kontextual values as an example. To do so, survival data is extracted from spe_Keren_2018 and converted into the survival object kerenSurv.\n\n# Extracting survival data\nsurvData = spe_Keren_2018 |&gt;\n    colData() |&gt; \n    data.frame() |&gt; \n    select(imageID, Survival_days_capped., Censored) |&gt; \n    unique()\n\n# Creating survival vector\nkerenSurv = Surv(survData$Survival_days_capped, survData$Censored)\nnames(kerenSurv) = survData$imageID\n\nIn addition to this, the Kontextual results must be converted from a data.frame to a wide matrix, this can be done using prepMatrix. Note, to extract the original L-function values, specify column = \"original\" in prepMatrix.\n\n# Converting Kontextual result into data matrix\nkontextMat = prepMatrix(kerenKontextual)\n\n# Ensuring rownames of kontextMat match up with rownames of the survival vector \nkontextMat = kontextMat[names(kerenSurv), ]\n\n# Replace NAs with 0\nkontextMat[is.na(kontextMat )] &lt;- 0\n\nFinally, both the Kontextual matrix and survival object are passed into colTest, with type = \"survival\" to obtain the survival results.\n\n# Running survival analysis\nsurvivalResults = spicyR::colTest(kontextMat, kerenSurv, type = \"survival\")\n\n\nhead(survivalResults)\n\n                                        coef se.coef    pval adjPval\nMesenchymal__Macrophages__tissue      -0.130  0.0340 0.00017    0.06\nEndothelial__Mono_or_Neu__tissue      -0.035  0.0110 0.00110    0.18\nMesenchymal__Other_Immune__tissue      0.068  0.0220 0.00230    0.18\nTumour__CD4_T_cell__tumour             0.011  0.0036 0.00320    0.18\nMesenchymal__Macrophages__mesenchymal -0.120  0.0410 0.00350    0.18\nCD4_T_cell__CD8_T_cell__tcells         0.250  0.0850 0.00360    0.18\n                                                                    cluster\nMesenchymal__Macrophages__tissue           Mesenchymal__Macrophages__tissue\nEndothelial__Mono_or_Neu__tissue           Endothelial__Mono_or_Neu__tissue\nMesenchymal__Other_Immune__tissue         Mesenchymal__Other_Immune__tissue\nTumour__CD4_T_cell__tumour                       Tumour__CD4_T_cell__tumour\nMesenchymal__Macrophages__mesenchymal Mesenchymal__Macrophages__mesenchymal\nCD4_T_cell__CD8_T_cell__tcells               CD4_T_cell__CD8_T_cell__tcells\n\n\nAs we can see from the results Mesenchymal__Macrophages__tissue is the most significant pairwise relationship which contributes to patient survival. That is the relationship between Mesenchymal cells and macrophage cells, relative to the parent population of all tissue cells. We can see that there is a negative coefficient associated with this relationship, which tells us a decrease in localisation of Mesenchymal and Macrophages leads to poorer survival outcomes for patients.\nThe association between Mesenchymal__Macrophages__tissue and survival can also be visualised on a Kaplan-Meier curve. We must first extract the Kontextual values of this relationship across all images. Next we determine if Mesenchymal and Macrophages are relatively attracted or avoiding in each image, by comparing the Kontextual value in each image to the median Kontextual value. Finally we plot the Kaplan-Meier curve using the ggsurvfit package.\nAs shown below, when Mesenchymal and Macrophages are relatively more dispersed to one another, patients tend to have worse survival outcomes.\n\n# Selecting most significant relationship\nsurvRelationship = kontextMat[[\"Mesenchymal__Macrophages__tissue\"]]\nsurvRelationship = ifelse(survRelationship &gt; median(survRelationship), \"Localised\", \"Dispersed\")\n    \n# Plotting Kaplan-Meier curve\nsurvfit2(kerenSurv ~ survRelationship) |&gt;\n    ggsurvfit() +\n    add_pvalue() +\n    ggtitle(\"Mesenchymal__Macrophages__tissue\")"
  },
  {
    "objectID": "datasets/Keren_2018/Keren_2018.html#identifying-continuous-changes-in-cell-state",
    "href": "datasets/Keren_2018/Keren_2018.html#identifying-continuous-changes-in-cell-state",
    "title": "Triple Negative Breast Cancer",
    "section": "Identifying continuous changes in cell state",
    "text": "Identifying continuous changes in cell state\nChanges in cell states can be analytically framed as the change in abundance of a gene or protein within a particular cell type. We can analytically determine whether continuous changes occur to a cell’s state as changes occur in its spatial proximity to another cell type. In the figures below we see the expression of a marker increased in cell type A as it grows closer in spatial proximity to cell type B. This can then be quantified with a scatterplot to determine statistical significance. In the next section of this workshop, we will be exploring the analytical functionalities of Statial which can uncover these continuous changes in cell state.\n\nContinuous cell state changes within a single image.\nThe first step in analysing these changes is to calculate the spatial proximity (getDistances) and abundance (getAbundances) of each cell to every cell type. These values will then be stored in the reducedDims slot of the SpatialExperiment object under the names distances and abundances respectively.\n\nspe_Keren_2018 &lt;- getDistances(spe_Keren_2018,\n                    maxDist = 200)\n\nspe_Keren_2018 &lt;- getAbundances(spe_Keren_2018,\n                     r = 50)\n\nFirst, let’s examine the same effect observed earlier with Kontextual. To avoid redefining cell types we’ll examine the distance between p53-positive tumour cells and macrophages in the context of total keratin/tumour cells for image 6.\nStatial provides two main functions to assess this relationship - calcStateChanges and plotStateChanges. We can use calcStateChanges to examine the relationship between 2 cell types for 1 marker in a specific image. Similar to Kontextual, we can specify the two cell types with the to and from arguments, and the marker of interest with the marker argument. We can appreciate that the fdr statistic for this relationship is significant, and with a negative coef, or coefficient value, indicating that the expression of p53 in keratin/tumour cells decreases as distance from macrophages increases.\n\nstateChanges &lt;- calcStateChanges(\n  cells = spe_Keren_2018,\n  type = \"distances\",\n  image = \"6\",\n  from = \"Keratin_Tumour\",\n  to = \"Macrophages\",\n  marker = \"p53\")\n\nstateChanges\n\n  imageID primaryCellType otherCellType marker         coef      tval\n1       6  Keratin_Tumour   Macrophages    p53 -0.001402178 -7.010113\n          pval          fdr\n1 2.868257e-12 2.868257e-12\n\n\nStatial provides a convenient function for visualising this relationship - plotStateChanges. Similar to Kontextual and calcStateChanges, we can specify the cell types to be evaluated with the to and from arguments and the marker of interest with marker.\nThrough this analysis, we can observe that keratin/tumour cells closer to a group of macrophages tend to have higher expression of p53, as observed in the first graph. This relationship is quantified with the second graph, showing an overall decrease of p53 expression in keratin/tumour cells as distance to macrophages increase.\nThese results allow us to essentially arrive at the same result as Kontextual, which calculated a localisation between p53+ keratin/tumour cells and macrophages in the wider context of keratin/tumour cells.\n\np &lt;- plotStateChanges(\n  cells = spe_Keren_2018,\n  type = \"distances\",\n  image = \"6\",\n  from = \"Keratin_Tumour\",\n  to = \"Macrophages\",\n  marker = \"p53\",\n  size = 1,\n  shape = 19,\n  interactive = FALSE,\n  plotModelFit = FALSE,\n  method = \"lm\")\n\np$image + \n  labs(y = \"p53 expression in Keratin_Tumour\",\n       x = \"Distance of Keratin_Tumour to Macrophages\")\n\n\n\np$scatter\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nQuestion\n\nWhat information does this form of analysis provide that Kontextual does not?\nIs this observation of localisation consistent across images?\nCan you find an interaction where the coefficient is positive? i.e. marker expression in the to cell type rises as distances increases from the from cell type.\n\n\nContinuous cell state changes across all images.\nBeyond looking at single cell-to-cell interactions for a single image, we can also look at all interactions across all images. The calcStateChanges function provided by Statial can be expanded for this exact purpose - by not specifying cell types, a marker, or an image, calcStateChanges will examine the most significant correlations between distance and marker expression across the entire dataset. Here, we’ve calculated all state changes across all images in case you would like to have a play, but first we’ll be taking a closer examination at the most significant interactions found within image 6 of the Keren et al. dataset.\n\nstateChanges &lt;- calcStateChanges(\n  cells = spe_Keren_2018,\n  type = \"distances\",\n  minCells = 100)\n\nstateChanges |&gt; \n  filter(imageID == 6) |&gt;\n  head(n = 10)\n\n   imageID primaryCellType otherCellType       marker         coef      tval\n1        6  Keratin_Tumour  Unidentified           Na  0.004218419  25.03039\n2        6  Keratin_Tumour   Macrophages  HLA_Class_1 -0.003823497 -24.69629\n3        6  Keratin_Tumour    CD4_T_cell  HLA_Class_1 -0.003582774 -23.87797\n4        6  Keratin_Tumour  Unidentified Beta.catenin  0.005893120  23.41953\n5        6  Keratin_Tumour    CD8_T_cell  HLA_Class_1 -0.003154544 -23.13804\n6        6  Keratin_Tumour    DC_or_Mono  HLA_Class_1 -0.003353834 -22.98944\n7        6  Keratin_Tumour      dn_T_CD3  HLA_Class_1 -0.003123446 -22.63197\n8        6  Keratin_Tumour        Tumour  HLA_Class_1  0.003684079  21.94265\n9        6  Keratin_Tumour    CD4_T_cell           Fe -0.003457338 -21.43550\n10       6  Keratin_Tumour    CD4_T_cell   phospho.S6 -0.002892457 -20.50767\n            pval           fdr\n1  6.971648e-127 3.391688e-123\n2  7.814253e-124 3.421451e-120\n3  1.745242e-116 5.660370e-113\n4  1.917245e-112 5.789387e-109\n5  5.444541e-110 1.513574e-106\n6  1.053130e-108 2.837601e-105\n7  1.237988e-105 3.011388e-102\n8  8.188258e-100  1.707242e-96\n9   1.287478e-95  2.348829e-92\n10  3.928912e-88  5.881245e-85\n\n\nIn image 6, the majority of the top 10 most significant interactions occur between keratin/tumour cells and an immune population, and many of these interactions appear to involve the HLA class I ligand.\nWe can examine some of these interactions further with the plotStateChanges function. Taking a closer examination of the relationship between macrophages and keratin/tumour HLA class I expression, the plot below shows us a clear visual correlation - as macrophage density increases, keratin/tumour cells increase their expression HLA class I.\nBiologically, HLA Class I is a ligand which exists on all nucleated cells, tasked with presenting internal cell antigens for recognition by the immune system, marking aberrant cells for destruction by either CD8+ T cells or NK cells.\n\np &lt;- plotStateChanges(\n  cells = spe_Keren_2018,\n  type = \"distances\",\n  image = \"6\",\n  from = \"Keratin_Tumour\",\n  to = \"Macrophages\",\n  marker = \"HLA_Class_1\",\n  size = 1,\n  shape = 19,\n  interactive = FALSE,\n  plotModelFit = FALSE,\n  method = \"lm\")\n\np$image + \n  labs(y = \"HLA_Class_1 expression in Keratin_Tumour\",\n       x = \"Distance of Keratin_Tumour to Macrophages\")\n\n\n\np$scatter\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1359 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 1359 rows containing missing values (`geom_point()`).\n\n\n\n\n\nNow, we can take a look at the top 10 most significant results across all images.\n\nstateChanges |&gt; head(n = 10)\n\n       imageID primaryCellType otherCellType     marker         coef\n69468       37     Endothelial        Tumour       Lag3 -0.001621517\n144255      11     Neutrophils            NK       CD56 -0.059936866\n16402       35      CD4_T_cell        B_cell       CD20 -0.029185750\n16498       35      CD4_T_cell    DC_or_Mono       CD20  0.019125946\n4891        35          B_cell    DC_or_Mono phospho.S6  0.005282065\n16507       35      CD4_T_cell    DC_or_Mono phospho.S6  0.004033218\n4885        35          B_cell    DC_or_Mono     HLA.DR  0.011120703\n5043        35          B_cell  Other_Immune          P  0.011182182\n16354       35      CD4_T_cell      dn_T_CD3       CD20  0.016349492\n4888        35          B_cell    DC_or_Mono     H3K9ac  0.005096632\n                tval          pval           fdr\n69468  -1.334186e+14  0.000000e+00  0.000000e+00\n144255 -1.405002e+14  0.000000e+00  0.000000e+00\n16402  -4.057355e+01 7.019343e-282 4.097869e-277\n16498   4.053436e+01 1.891267e-281 8.280867e-277\n4891    4.041385e+01 5.306590e-278 1.858782e-273\n16507   3.472882e+01 4.519947e-219 1.319365e-214\n4885    3.415344e+01 8.401034e-212 2.101927e-207\n5043    3.414375e+01 1.056403e-211 2.312717e-207\n16354   3.391901e+01 1.219488e-210 2.373110e-206\n4888    3.399856e+01 3.266533e-210 5.720973e-206\n\n\nImmediately, we can appreciate that a couple of interactions appear a bit strange. One of the most significant interactions occurs between B cells and CD4 T cells, where CD4 T cells are found to increase in CD20 expression when in close proximity to B cells. Biologically, CD20 is a highly specific ligand for B cells, and under healthy circumstances are usually not expressed in T cells.\nCould this potentially be an artefact of calcStateChanges? We can examine the image through the plotStateChanges function, where we indeed observe an apparent localisation between B cells and T cells.\n\nQuestion\n\nAre there any other interactions here that you think might not make biological sense?\nDoes the relationship between T cell CD20 expression and B cell proximity occur across images?\n\nWhy are the majority of most significant interactions occurring in image 35?\nHINT: Configure the parameters of plotStateChanges to examine some these other significant interactions. Do they look like artefacts?\n\n\n\n\np &lt;- plotStateChanges(\n  cells = spe_Keren_2018,\n  type = \"distances\",\n  image = \"35\",\n  from = \"CD4_T_cell\",\n  to = \"B_cell\",\n  marker = \"CD20\",\n  size = 1,\n  shape = 19,\n  interactive = FALSE,\n  plotModelFit = FALSE,\n  method = \"lm\")\n\np$image + \n  labs(y = \"CD20 expression in CD4_T_cell\",\n       x = \"Distance of B_cell to CD4_T_cell\")\n\n\n\np$scatter\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 26 rows containing missing values (`geom_smooth()`).\n\n\n\n\n\nSo why are T cells expressing CD20? This brings us to a key limitation of cell segmentation.\nContamination (Lateral marker spill over)\nContamination, or more specifically known as lateral marker spill over, is an issue that results in a cell’s marker expressions being wrongly attributed to another adjacent cell. This issue arises from incorrect segmentation where components of one cell are wrongly determined as belonging to another cell. Alternatively, this issue can arise when antibodies used to tag and measure marker expressions do not latch on properly to a cell of interest, thereby resulting in residual markers being wrongly assigned as belonging to a cell near the intended target cell. It is important that we either correct or account for this incorrect attribution of markers in our modelling process. This is critical in understanding whether significant cell-cell interactions detected are an artifact of technical measurement errors driven by spill over or are real biological changes that represent a shift in a cell’s state.\n\nTo circumvent this problem, Statial provides a function that predicts the probability that a cell is any particular cell type - calcContamination. calcContamination returns a dataframe of probabilities demarcating the chance of a cell being any particular cell type. This dataframe is stored under contaminations in the reducedDim slot of the SpatialExperiment object. It also provides the rfMainCellProb column, which provides the probability that a cell is indeed the cell type it has been designated. E.g. For a cell designated as a CD8+ T cell, rfMainCellProb could give a 80% chance that the cell is indeed CD8+ T cell, due to contamination.\nWe can then introduce these probabilities as covariates into our linear model by setting contamination = TRUE as a parameter in our calcStateChanges function. However, this is not a perfect solution for the issue of contamination. As we can see, despite factoring in contamination into our linear model, the correlation between B cell density and CD20 expression in CD4+ T cells remains one of the most significant interactions in our model.\n\nspe_Keren_2018 &lt;- calcContamination(spe_Keren_2018)\n\nGrowing trees.. Progress: 32%. Estimated remaining time: 1 minute, 5 seconds.\nGrowing trees.. Progress: 68%. Estimated remaining time: 29 seconds.\n\nstateChangesCorrected &lt;- calcStateChanges(\n  cells = spe_Keren_2018,\n  type = \"distances\",\n  minCells = 100,\n  contamination = TRUE)\n\nstateChangesCorrected |&gt; head(n = 20)\n\n       imageID primaryCellType otherCellType      marker         coef\n69468       37     Endothelial        Tumour        Lag3 -0.001621517\n144255      11     Neutrophils            NK        CD56 -0.059936866\n16402       35      CD4_T_cell        B_cell        CD20 -0.025132928\n16498       35      CD4_T_cell    DC_or_Mono        CD20  0.016143319\n16354       35      CD4_T_cell      dn_T_CD3        CD20  0.013763574\n16507       35      CD4_T_cell    DC_or_Mono  phospho.S6  0.003605343\n4891        35          B_cell    DC_or_Mono  phospho.S6  0.004283839\n16357       35      CD4_T_cell      dn_T_CD3      HLA.DR  0.010273351\n85540        3  Keratin_Tumour            DC          Ca -0.013824194\n3697        28          B_cell            NK          Na -0.004512674\n4741        35          B_cell      dn_T_CD3      HLA.DR  0.008945041\n82078       23  Keratin_Tumour  Unidentified HLA_Class_1  0.003088814\n80974       20  Keratin_Tumour        Tumour HLA_Class_1  0.002885714\n4885        35          B_cell    DC_or_Mono      HLA.DR  0.008768858\n81737       21  Keratin_Tumour            DC Pan.Keratin -0.005946597\n16491       35      CD4_T_cell    DC_or_Mono      CSF.1R  0.008555071\n16363       35      CD4_T_cell      dn_T_CD3  phospho.S6  0.002943713\n94705        6  Keratin_Tumour  Unidentified          Na  0.004203550\n5083        35          B_cell  Other_Immune  phospho.S6  0.004581697\n80929       20  Keratin_Tumour        Tumour          Na  0.002538321\n                tval          pval           fdr\n69468  -7.324540e+13  0.000000e+00  0.000000e+00\n144255 -1.526269e+14  0.000000e+00  0.000000e+00\n16402  -3.547258e+01 1.170252e-226 6.831892e-222\n16498   3.418061e+01 3.715804e-213 1.626956e-208\n16354   2.992984e+01 2.916068e-170 1.021435e-165\n16507   2.979085e+01 6.635471e-169 1.936883e-164\n4891    2.982544e+01 2.051177e-168 5.132014e-164\n16357   2.924956e+01 1.192525e-163 2.610721e-159\n85540  -2.956443e+01 2.240224e-162 4.359451e-158\n3697   -2.952478e+01 4.280717e-162 7.497204e-158\n4741    2.601619e+01 7.627899e-133 1.214493e-128\n82078   2.523827e+01 3.433819e-129 5.011631e-125\n80974   2.525393e+01 4.477615e-129 6.032346e-125\n4885    2.530681e+01 1.593577e-126 1.993554e-122\n81737  -2.456741e+01 1.660224e-125 1.938466e-121\n16491   2.505473e+01 9.225208e-125 1.009809e-120\n16363   2.493238e+01 1.110744e-123 1.144321e-119\n94705   2.462661e+01 3.727263e-123 3.626607e-119\n5083    2.470724e+01 2.895091e-121 2.668649e-117\n80929   2.428268e+01 3.238529e-120 2.835964e-116\n\n\nHowever, this does not mean factoring in contamination into our linear model was ineffective. In general, cell type specific markers such as CD68, CD45, and CD20 should not change in cells they are not specific to. Therefore, relationships detected to be significant involving these cell type markers are likely false positives and will be treated as such for the purposes of evaluation.\nPlotting the relationship between false positives and true positives, we’d expect the contamination correction to be greatest in relationships which are detected to be more significant.\n\ncellTypeMarkers &lt;- c(\"CD3\", \"CD4\", \"CD8\", \"CD56\", \"CD11c\", \"CD68\", \"CD45\", \"CD20\")\n\nvalues = c(\"blue\", \"red\")\nnames(values) &lt;- c(\"None\", \"Corrected\")\n\ndf &lt;- rbind(data.frame(TP =cumsum(stateChanges$marker %in% cellTypeMarkers), FP = cumsum(!stateChanges$marker %in% cellTypeMarkers), type = \"None\"),\n            data.frame(TP =cumsum(stateChangesCorrected$marker %in% cellTypeMarkers), FP = cumsum(!stateChangesCorrected$marker %in% cellTypeMarkers), type = \"Corrected\"))\n\nggplot(df, aes(x = TP, y = FP, colour = type)) + geom_line()+ labs(y = \"Cell state marker\", x = \"Cell type marker\") + scale_colour_manual(values = values)\n\n\n\n\nHere, we zoom in on the ROC curve where the top 100 lowest p values occur, where we indeed see more true positives than false positives with contamination correction.\n\nggplot(df, aes(x = TP, y = FP, colour = type)) + geom_line()+ xlim(0,100) + ylim(0,1000)+ labs(y = \"Cell state marker\", x = \"Cell type marker\") + scale_colour_manual(values = values)\n\nWarning: Removed 348997 rows containing missing values (`geom_line()`).\n\n\n\n\n\n\nQuestion\n\nWhat can we conclude from the above ROC graphs?\n\n\nAssociate continuous state changes with survival outcomes\nSimiliar to Kontextual, we can run a similar survival analysis using our state changes results. Here, prepMatrix extracts the coefficients, or the coef column of stateChanges by default. To use the t values instead, specify column = \"tval\" in the prepMatrix function.\n\n# Preparing features for Statial\nstateMat &lt;- prepMatrix(stateChanges)\n\n# Ensuring rownames of stateMat match up with rownames of the survival vector\nstateMat &lt;- stateMat[names(kerenSurv), ]\n\n# Remove some very small values\nstateMat &lt;- stateMat[,colMeans(abs(stateMat)&gt;0.0001)&gt;.8]\n\nsurvivalResults &lt;- colTest(stateMat, kerenSurv, type = \"survival\")\n\nhead(survivalResults)\n\n                                           coef se.coef   pval adjPval\nKeratin_Tumour__Mesenchymal__HLA_Class_1   -800     230 0.0005    0.28\nMacrophages__Endothelial__CD31             -390     120 0.0019    0.28\nMacrophages__dn_T_CD3__P                   -400     130 0.0026    0.28\nMacrophages__CD4_T_cell__H3K9ac            -560     190 0.0029    0.28\nKeratin_Tumour__dn_T_CD3__HLA_Class_1      -560     190 0.0032    0.28\nKeratin_Tumour__Keratin_Tumour__phospho.S6  170      59 0.0040    0.28\n                                                                              cluster\nKeratin_Tumour__Mesenchymal__HLA_Class_1     Keratin_Tumour__Mesenchymal__HLA_Class_1\nMacrophages__Endothelial__CD31                         Macrophages__Endothelial__CD31\nMacrophages__dn_T_CD3__P                                     Macrophages__dn_T_CD3__P\nMacrophages__CD4_T_cell__H3K9ac                       Macrophages__CD4_T_cell__H3K9ac\nKeratin_Tumour__dn_T_CD3__HLA_Class_1           Keratin_Tumour__dn_T_CD3__HLA_Class_1\nKeratin_Tumour__Keratin_Tumour__phospho.S6 Keratin_Tumour__Keratin_Tumour__phospho.S6\n\n\nFor our state changes results, Keratin_Tumour__Mesenchymal__HLA_Class_1 is the most significant pairwise relationship which contributes to patient survival. That is, the relationship between HLA class I expression in keratin/tumour cells and their spatial proximity to mesenchymal cells. As there is a negative coeffcient associated with this relationship, which tells us that higher HLA class I expression in keratin/tumour cells nearby mesenchymal cell populations lead to poorer survival outcomes for patients.\n\n# Selecting the most significant relationship\nsurvRelationship = stateMat[[\"Keratin_Tumour__Mesenchymal__HLA_Class_1\"]]\nsurvRelationship = ifelse(survRelationship &gt; median(survRelationship), \"Higher expressed in close cells\", \"Lower expressed in close cells\")\n    \n# Plotting Kaplan-Meier curve\nsurvfit2(kerenSurv ~ survRelationship) |&gt;\n    ggsurvfit() +\n    add_pvalue() +\n    ggtitle(\"Keratin_Tumour__Mesenchymal__HLA_Class_1\")\n\n\n\n\n\nQuestion\n\nHow should these coefficients be interpreted?\nDo any of these relationships makes sense?\nCould you visualise representative images?"
  },
  {
    "objectID": "datasets/Keren_2018/Keren_2018.html#continuous-cell-state-changes-within-spatial-domains",
    "href": "datasets/Keren_2018/Keren_2018.html#continuous-cell-state-changes-within-spatial-domains",
    "title": "Triple Negative Breast Cancer",
    "section": "Continuous cell state changes within spatial domains",
    "text": "Continuous cell state changes within spatial domains\nWe can look at changes of cell state relative to membership of different spatial domains. These domains can represent distinct tissue microenvironments where cells will potentially be interacting with different types cells.\n\nHere we see the abundance of a marker being higher in cell type 2 within spatial region 1 than spatial region 2.\nIdentify spatial domains with lisaClust\nWe can cluster areas with similar spatial interactions to identify regions using the lisaClust package on Bioconductor. Here we set k = 5 to identify 5 regions.\n\nset.seed(51773)\n\n# Preparing features for lisaClust\nspe_Keren_2018 &lt;- lisaClust::lisaClust(spe_Keren_2018, k = 5)\n\nGenerating local L-curves. If you run out of memory, try 'fast = FALSE'.\n\n\nThe regions identified by lisaClust can be visualised using the hatchingPlot function.\n\n# Use hatching to visualise regions and cell types.\nlisaClust::hatchingPlot(spe_Keren_2018,\n  useImages = \"5\",\n  line.spacing = 41, # spacing of lines\n  nbp = 100 # smoothness of lines\n) \n\nThere is no cellID. I'll create these\n\n\nThere is no image specific imageCellID. I'll create these\n\n\nCreating variable region\n\n\nConcave windows are temperamental. Try choosing values of window.length &gt; and &lt; 1 if you have problems.\n\n\nWarning in split.default(x = seq_len(nrow(x)), f = f, drop = drop, ...): data\nlength is not a multiple of split variable\n\nWarning in split.default(x = seq_len(nrow(x)), f = f, drop = drop, ...): data\nlength is not a multiple of split variable\n\n\n\n\n\nChanges in marker means\nStatial provides functionality to identify the average marker expression of a given cell type in a given region, using the getMarkerMeans function. Similar to the analysis above, these features can also be used for survival analysis.\n\ncellTypeRegionMeans &lt;- getMarkerMeans(spe_Keren_2018,\n                              imageID = \"imageID\",\n                              cellType = \"cellType\",\n                              region = \"region\")\n\nsurvivalResults = colTest(cellTypeRegionMeans[names(kerenSurv),], kerenSurv, type = \"survival\")\n\nhead(survivalResults)\n\n                                    coef se.coef    pval adjPval\nphospho.S6__Unidentified__region_3 -3.10    0.86 0.00034    0.33\nCD8__Mono_or_Neu__region_1          7.40    2.10 0.00041    0.33\nAu__Tumour__region_3                0.97    0.29 0.00081    0.33\nTa__Tumour__region_3                0.95    0.29 0.00088    0.33\nCD31__Mesenchymal__region_5        21.00    6.30 0.00110    0.33\nP__Unidentified__region_3          -1.10    0.35 0.00130    0.33\n                                                              cluster\nphospho.S6__Unidentified__region_3 phospho.S6__Unidentified__region_3\nCD8__Mono_or_Neu__region_1                 CD8__Mono_or_Neu__region_1\nAu__Tumour__region_3                             Au__Tumour__region_3\nTa__Tumour__region_3                             Ta__Tumour__region_3\nCD31__Mesenchymal__region_5               CD31__Mesenchymal__region_5\nP__Unidentified__region_3                   P__Unidentified__region_3"
  },
  {
    "objectID": "datasets/Keren_2018/Keren_2018.html#patient-classification",
    "href": "datasets/Keren_2018/Keren_2018.html#patient-classification",
    "title": "Triple Negative Breast Cancer",
    "section": "Patient classification",
    "text": "Patient classification\nFinally we demonstrate how we can use the Bioconductor package ClassifyR to perform patient classification with the features generated from Statial. In addition to the kontextual, state changes, and marker means values, we also calculate cell type proportions and region proportions using the getProp function in spicyR. Here we perform 5 fold cross validation with 20 repeats, using a CoxPH model for survival classification.\n\n# Calculate cell type and region proportions\ncellTypeProp &lt;- getProp(spe_Keren_2018, \n                       feature = \"cellType\",\n                       imageID = \"imageID\")\nregionProp &lt;- getProp(spe_Keren_2018, \n                       feature = \"region\",\n                       imageID = \"imageID\")\n\n# Combine all the features into a list for classification \nfeatureList &lt;- list(states = stateMat, \n                     kontextual = kontextMat,\n                     regionMarkerMeans = cellTypeRegionMeans,\n                     cellTypeProp = cellTypeProp,\n                     regionProp = regionProp)\n\n# Ensure the rownames of the features match the order of the survival vector\nfeatureList &lt;- lapply(featureList, function(x)x[names(kerenSurv),])\n\n\nset.seed(51773)\n\nkerenCV = crossValidate(\n  measurements = featureList,\n  outcome = kerenSurv,\n  classifier = \"CoxPH\",\n  selectionMethod  = \"CoxPH\",\n  nFolds = 5,\n  nFeatures = 10,\n  nRepeats = 20\n  )\n\nHere, we use the performancePlot function to assess the C-index from each repeat of the 5-fold cross-validation. We can see that in this case cell type proportions are not a reliable predictor of survival. However the proportion of each spatial domain region in an image or the states estimated by Kontextual could be.\n\n# Calculate AUC for each cross-validation repeat and plot.\nperformancePlot(kerenCV,\n  characteristicsList = list(x = \"Assay Name\")\n  ) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\nWarning in .local(results, ...): C-index not found in all elements of results.\nCalculating it now."
  },
  {
    "objectID": "gettingStarted.html",
    "href": "gettingStarted.html",
    "title": "Getting Started",
    "section": "",
    "text": "If you are new to spatial omics data this is a great place to start"
  },
  {
    "objectID": "gettingStarted.html#what-are-cellular-subcellular-technologies",
    "href": "gettingStarted.html#what-are-cellular-subcellular-technologies",
    "title": "Getting Started",
    "section": "What are cellular subcellular technologies?",
    "text": "What are cellular subcellular technologies?"
  },
  {
    "objectID": "gettingStarted.html#using-our-packages",
    "href": "gettingStarted.html#using-our-packages",
    "title": "Getting Started",
    "section": "Using our packages",
    "text": "Using our packages\nIts important to know that our package are interoprable with many other awesome packages out there. You can pick and choose whatever you want to do.\nMain thing to know is SpatialExperiment."
  },
  {
    "objectID": "gettingStarted.html#spatialexperiment",
    "href": "gettingStarted.html#spatialexperiment",
    "title": "Getting Started",
    "section": "SpatialExperiment",
    "text": "SpatialExperiment\nHere is how you turn a csv, data.frame, suerat object or giotto object into a SpatialExperiment."
  },
  {
    "objectID": "gettingStarted.html#analysis-approaches",
    "href": "gettingStarted.html#analysis-approaches",
    "title": "Getting Started",
    "section": "Analysis approaches",
    "text": "Analysis approaches\nThere are lots of types of analysis you can do. See our Software page for detailed explanations. Broadly, we like to think of spatial analysis in the following way…."
  },
  {
    "objectID": "questions.html",
    "href": "questions.html",
    "title": "Analytical questions",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "questions.html#quarto",
    "href": "questions.html#quarto",
    "title": "Analytical questions",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "questions.html#running-code",
    "href": "questions.html#running-code",
    "title": "Analytical questions",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "examples.html#seqfish",
    "href": "examples.html#seqfish",
    "title": "Spatial analysis applied to different technologies",
    "section": "seqFISH",
    "text": "seqFISH\nSeqFISH (sequential Fluorescence In Situ Hybridization) is a technology that enables the identification of thousands of molecules like RNA, DNA, and proteins directly in single cells with their spatial context preserved. seqFISH can multiplex over 10,000 molecules and integrate multiple modalities, such as imaging the transcriptome and proteins\n\nMouse organogenesis - Lohoff_2022\nWe use our package scHOT to analyse Lohoff et al’s study of early mouse organogenesis that was performed using a seqFISH. This analysis was adapted from a workshop that Shila and Ellis deliver as an introduction to spatial data analysis and in addition to scHOT, covers basic manipulation and visualisation of SpatialExperiment objects.\n Lohoff et al. (2022). Integration of spatial and single-cell transcriptomic data elucidates mouse organogenesis. Nature Biotechnology 40, 74–85 (DOI)."
  },
  {
    "objectID": "datasets/Lohoff_2022/Lohoff_2022.html",
    "href": "datasets/Lohoff_2022/Lohoff_2022.html",
    "title": "Early mouse organogenesis",
    "section": "",
    "text": "Introduction\nIn the following we will conductor an analysis of Lohoff et al’s study of early mouse organogenesis that was performed using a seqFISH. This analysis was adapted from a workshop that Shila and Ellis deliver as an introduction to spatial data analysis.\nLoading R packages and setting parameters\n\nsuppressPackageStartupMessages({\n  # Data packages\n  library(STexampleData)\n  library(imcdatasets)\n  \n  # Packages from scdney\n  library(scHOT)\n\n  # Extra packages needed for workshop\n  library(ggplot2)\n  library(scater)\n  library(scuttle)\n  library(batchelor)\n  library(patchwork)\n  library(plotly)\n  library(RColorBrewer)\n})\n\n# We can use the following to increase computational speed.\n# If you feel confident in the amount of CPU cores and/or memory that you have \n# access to, feel free to increase nCores.\n\nnCores &lt;- 1 \nBPPARAM &lt;- simpleSeg:::generateBPParam(nCores)\n\n# The following will improve the aesthetics of some of the plots that we will\n# generate.\ntheme_set(theme_classic())\nsource(\"celltype_colours.R\")\n\nPart 1: Data structures and exploratory data analysis\nHere we will download the dataset, examine the structure and perform some exploratory analyses. We will use a subset of data that is made available from the STExampleData package. Downloading this might take a few moments and you may be prompted to install some additional packages.\nHere we download the seqFISH mouse embryo data. This is a SpatialExperiment object, which extends the SingleCellExperiment object.\n\nspe &lt;- STexampleData::seqFISH_mouseEmbryo()\n\nsee ?STexampleData and browseVignettes('STexampleData') for documentation\n\n\nloading from cache\n\n\nLoading required package: BumpyMatrix\n\nspe\n\nclass: SpatialExperiment \ndim: 351 11026 \nmetadata(0):\nassays(2): counts molecules\nrownames(351): Abcc4 Acp5 ... Zfp57 Zic3\nrowData names(1): gene_name\ncolnames(11026): embryo1_Pos0_cell10_z2 embryo1_Pos0_cell100_z2 ...\n  embryo1_Pos28_cell97_z2 embryo1_Pos28_cell98_z2\ncolData names(14): cell_id embryo ... segmentation_vertices sample_id\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\nspatialCoords names(2) : x y\nimgData names(0):\n\n\nWe can use functions designed for SingleCellExperiment objects in the scater package for plotting via the reducedDim slot. We multiply the spatial coordinates by a matrix to flip the y-axis and ensure we fix the aspect ratio.\n\nspe &lt;- logNormCounts(spe)\ncoord_transform &lt;- matrix(c(1,0,0,-1), 2, 2, byrow = TRUE)\nreducedDim(spe, \"spatialCoords\") &lt;- spatialCoords(spe) %*% coord_transform\nplotReducedDim(spe, \"spatialCoords\", colour_by = c(\"Sox2\"), point_size = 1) +\n  coord_fixed()\n\n\n\n\nQuestions\n\nHow many cells are in this data?\nHow many genes?\nPlot gene expression mapping point size to the cell area.\n\n\n# try to answer the above question using the spe object. \n# you may want to check the SingleCellExperiment vignette.\n# https://bioconductor.org/packages/3.17/bioc/vignettes/SingleCellExperiment/inst/doc/intro.html\n\nWe can perform a typical gene-expression based analysis for this data. Later in part two we will perform some specific analytical techniques, but for now let’s explore the dataset and use methods designed for single cell data.\nDimensionality reduction using PCA, batch correction across tiles using the batchelor package, followed by UMAP and plotting.\n\nspe &lt;- runPCA(spe)\n\nb.out &lt;- batchelor::batchCorrect(spe, batch = spe$pos, assay.type = \"logcounts\", PARAM=FastMnnParam(d=20))\nreducedDim(spe, \"FastMnn\") &lt;- reducedDim(b.out, \"corrected\")\nspe &lt;- runUMAP(spe, dimred = \"FastMnn\")\nspe\n\nclass: SpatialExperiment \ndim: 351 11026 \nmetadata(0):\nassays(3): counts molecules logcounts\nrownames(351): Abcc4 Acp5 ... Zfp57 Zic3\nrowData names(1): gene_name\ncolnames(11026): embryo1_Pos0_cell10_z2 embryo1_Pos0_cell100_z2 ...\n  embryo1_Pos28_cell97_z2 embryo1_Pos28_cell98_z2\ncolData names(15): cell_id embryo ... sample_id sizeFactor\nreducedDimNames(4): spatialCoords PCA FastMnn UMAP\nmainExpName: NULL\naltExpNames(0):\nspatialCoords names(2) : x y\nimgData names(1): sample_id\n\ng_celltype_umap &lt;- plotReducedDim(spe, \"UMAP\", colour_by = \"celltype_mapped_refined\") + \n  scale_colour_manual(values = celltype_colours)\n\nScale for colour is already present.\nAdding another scale for colour, which will replace the existing scale.\n\ng_celltype_umap\n\n\n\nplotReducedDim(spe, \"UMAP\", colour_by = \"Sox2\")\n\n\n\ng_celltype_spatial &lt;- plotReducedDim(spe, \"spatialCoords\", colour_by = \"celltype_mapped_refined\") + \n  scale_colour_manual(values = celltype_colours) + \n  coord_fixed()\n\nScale for colour is already present.\nAdding another scale for colour, which will replace the existing scale.\n\ng_all &lt;- g_celltype_spatial + theme(legend.position = \"none\") + g_celltype_umap\ng_all\n\n\n\n\nAdvanced/Extension Question\n\nWhat considerations need to be made for batch correction of spatial data? What assumptions are being made and/or broken? How could you check this?\nCheck out the ggiraph package for extending the g_all object to an interactive plot with a tooltip that links the spatial and UMAP coordinate systems. (Hint: This may involve generating a new ggplot object outside of the plotReducedDim function.)\n\n\n# try to examine answer the above questions using the spe object. \n# you may want to set up some small simulation..\n\nPart 2: scHOT analysis of the developing brain\nHere we will ask which gene patterns we observe to be changing across the spe$gutRegion cell type in space. Note that we want to assess the anatomical region corresponding to the anterior end of the developing gut developing brain so we will first subset the cells using the spatial coordinates. We can check what we have selected by plotting.\n\nspe$gutRegion &lt;- spe$celltype_mapped_refined == \"Gut tube\" &\n  reducedDim(spe, \"spatialCoords\")[,1] &lt; -0.5\n\nplotReducedDim(spe, \"spatialCoords\", colour_by = \"gutRegion\") + \n  coord_fixed() + \n  scale_colour_manual(values = c(\"TRUE\" = \"red\", \"FALSE\" = \"grey\"))\n\nScale for colour is already present.\nAdding another scale for colour, which will replace the existing scale.\n\n\n\n\n\nLet’s subset the data to only these cells and continue with our scHOT analysis.\n\nspe_gut &lt;- spe[,spe$gutRegion]\nspe_gut\n\nclass: SpatialExperiment \ndim: 351 472 \nmetadata(0):\nassays(3): counts molecules logcounts\nrownames(351): Abcc4 Acp5 ... Zfp57 Zic3\nrowData names(1): gene_name\ncolnames(472): embryo1_Pos3_cell377_z2 embryo1_Pos3_cell388_z2 ...\n  embryo1_Pos27_cell74_z2 embryo1_Pos28_cell373_z2\ncolData names(16): cell_id embryo ... sizeFactor gutRegion\nreducedDimNames(4): spatialCoords PCA FastMnn UMAP\nmainExpName: NULL\naltExpNames(0):\nspatialCoords names(2) : x y\nimgData names(1): sample_id\n\n\nWe select genes with at least some proportion of expressed cells for testing, and create the scHOT object.\n\nhist(rowMeans(counts(spe_gut)&gt;0), 40)\n\n\n\ngene_to_test &lt;- as.matrix(c(rownames(spe_gut[rowMeans(counts(spe_gut)&gt;0) &gt; 0.2,])))\nlength(gene_to_test)\n\n[1] 165\n\nrownames(gene_to_test) &lt;- apply(gene_to_test, 1, paste0, collapse = \"_\")\nhead(gene_to_test)\n\n        [,1]     \nAcvr1   \"Acvr1\"  \nAcvr2a  \"Acvr2a\" \nAhnak   \"Ahnak\"  \nAkr1c19 \"Akr1c19\"\nAldh1a2 \"Aldh1a2\"\nAldh2   \"Aldh2\"  \n\nscHOT_spatial &lt;- scHOT_buildFromSCE(spe_gut,\n                                    assayName = \"logcounts\",\n                                    positionType = \"spatial\",\n                                    positionColData = c(\"x_global_affine\", \"y_global_affine\"))\n\nscHOT_spatial\n\nclass: scHOT \ndim: 351 472 \nmetadata(0):\nassays(1): expression\nrownames(351): Abcc4 Acp5 ... Zfp57 Zic3\nrowData names(0):\ncolnames(472): embryo1_Pos3_cell377_z2 embryo1_Pos3_cell388_z2 ...\n  embryo1_Pos27_cell74_z2 embryo1_Pos28_cell373_z2\ncolData names(16): cell_id embryo ... sizeFactor gutRegion\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\ntestingScaffold dim: 0 0 \nweightMatrix dim: 0 0 \nscHOT_output colnames (0):\nparam names (0):\nposition type: spatial \n\n\nWe now add the testing scaffold to the scHOT object, and set the local weight matrix for testing, with a choice of span of 0.1 (the proportion of cells to weight around each cell). We can speed up computation by not requiring the weight matrix correspond to every individual cell, but instead a random selection among all the cells using the thin function.\n\nscHOT_spatial &lt;- scHOT_addTestingScaffold(scHOT_spatial, gene_to_test)\nhead(scHOT_spatial@testingScaffold)\n\n        gene_1   \nAcvr1   \"Acvr1\"  \nAcvr2a  \"Acvr2a\" \nAhnak   \"Ahnak\"  \nAkr1c19 \"Akr1c19\"\nAldh1a2 \"Aldh1a2\"\nAldh2   \"Aldh2\"  \n\nscHOT_spatial &lt;- scHOT_setWeightMatrix(scHOT_spatial, span = 0.2)\n\nweightMatrix not provided, generating one using parameter settings...\n\nscHOT_spatial@weightMatrix &lt;- thin(scHOT_spatial@weightMatrix, n = 50)\n\ndim(slot(scHOT_spatial, \"weightMatrix\"))\n\n[1]  53 472\n\n\nFor a given cell we can visually examine the local weight given by the span parameter.\n\ncellID = 10\n\ndf &lt;- cbind(as.data.frame(colData(scHOT_spatial)),\n      W = slot(scHOT_spatial, \"weightMatrix\")[cellID,])\n\nggplot(df,\n       aes(x = x_global_affine, y = -y_global_affine)) +\n  geom_point(aes(colour = W, size = W)) +\n  scale_colour_gradient(low = \"black\", high = \"purple\") +\n  scale_size_continuous(range = c(0.5,2.5)) +\n  theme_classic() +\n  guides(colour = guide_legend(title = \"Spatial Weight\"),\n         size = guide_legend(title = \"Spatial Weight\")) +\n  ggtitle(paste0(\"Central cell: \", cellID)) + \n  coord_fixed() +\n  NULL\n\n\n\n\nQuestion\n\nHow will the results change if the span is increased/decreased?\n\n\n## Make associated changes to the code to test out the question above.\n\nWe set the higher order function as the weighted mean function, and then calculate the observed higher order test statistics. This may take around 10 seconds.\n\nscHOT_spatial &lt;- scHOT_calculateGlobalHigherOrderFunction(\n    scHOT_spatial,\n    higherOrderFunction = weightedMean,\n    higherOrderFunctionType = \"weighted\")\n\nhigherOrderFunctionType given will replace any stored param\n\n\nhigherOrderFunction given will replace any stored param\n\nslot(scHOT_spatial, \"scHOT_output\")\n\nDataFrame with 165 rows and 2 columns\n             gene_1 globalHigherOrderFunction\n        &lt;character&gt;                  &lt;matrix&gt;\nAcvr1         Acvr1                  0.216666\nAcvr2a       Acvr2a                  0.375776\nAhnak         Ahnak                  0.976418\nAkr1c19     Akr1c19                  0.744070\nAldh1a2     Aldh1a2                  0.245981\n...             ...                       ...\nWnt5a         Wnt5a                  0.335820\nWnt5b         Wnt5b                  0.220300\nXist           Xist                  1.162241\nZfp444       Zfp444                  0.744082\nZfp57         Zfp57                  0.595519\n\nscHOT_spatial &lt;- scHOT_calculateHigherOrderTestStatistics(\n    scHOT_spatial, na.rm = TRUE)\n\nhigherOrderSummaryFunction will replace any stored param\n\n\nNow we can plot the overall mean versus the scHOT statistic to observe any relationship. Labels can be interactively visualised using ggplotly. Some genes may have different distributions so we turn to permutation testing to assess statistical significance.\n\ng &lt;- ggplot(as.data.frame(scHOT_spatial@scHOT_output), \n           aes(x = globalHigherOrderFunction, y = higherOrderStatistic, label = gene_1)) + \n  xlab(\"Mean across all cells\") +\n  ylab(\"scHOT statistic for local weightedMean\") +\n  geom_point()\ng\n\n\n\nggplotly(g)\n\n\n\n\n\nSet up the permutation testing schema. For the purposes of this workshop we set a low number of permutations over a low number of genes in the testing scaffold, you may want to change this as you work through the workshop yourself. The testing will take a few minutes to run, here with the parallel parameters that were set at the beginning of this document.\n\nscHOT_spatial &lt;- scHOT_setPermutationScaffold(scHOT_spatial,\n                                              numberPermutations = 50,\n                                              numberScaffold = 30)\n\nscHOT_spatial &lt;- scHOT_performPermutationTest(\n    scHOT_spatial,\n    verbose = TRUE,\n    parallel = FALSE)\n\nPermutation testing combination 40 of 165...\nPermutation testing combination 150 of 165...\n\nslot(scHOT_spatial, \"scHOT_output\")\n\nDataFrame with 165 rows and 9 columns\n             gene_1 globalHigherOrderFunction            higherOrderSequence\n        &lt;character&gt;                  &lt;matrix&gt;                  &lt;NumericList&gt;\nAcvr1         Acvr1                  0.216666 0.251205,0.275076,0.286668,...\nAcvr2a       Acvr2a                  0.375776 0.398236,0.376223,0.361763,...\nAhnak         Ahnak                  0.976418    1.23931,1.22101,1.19278,...\nAkr1c19     Akr1c19                  0.744070 0.681732,0.622183,0.625407,...\nAldh1a2     Aldh1a2                  0.245981 0.117491,0.118105,0.121221,...\n...             ...                       ...                            ...\nWnt5a         Wnt5a                  0.335820 0.282418,0.280240,0.268180,...\nWnt5b         Wnt5b                  0.220300 0.262440,0.321449,0.368172,...\nXist           Xist                  1.162241    1.18893,1.17123,1.18238,...\nZfp444       Zfp444                  0.744082 0.529888,0.531771,0.538540,...\nZfp57         Zfp57                  0.595519 0.853046,0.844188,0.838651,...\n        higherOrderStatistic numberPermutations storePermutations\n                   &lt;numeric&gt;          &lt;numeric&gt;         &lt;logical&gt;\nAcvr1              0.0750954                  0              TRUE\nAcvr2a             0.0665143                  0              TRUE\nAhnak              0.3319897                  0              TRUE\nAkr1c19            0.1673342                  0              TRUE\nAldh1a2            0.1827836                  0              TRUE\n...                      ...                ...               ...\nWnt5a               0.172300                  0              TRUE\nWnt5b               0.104924                 50              TRUE\nXist                0.120828                  0              TRUE\nZfp444              0.118930                  0              TRUE\nZfp57               0.130128                  0              TRUE\n                             permutations pvalPermutations FDRPermutations\n                            &lt;NumericList&gt;        &lt;numeric&gt;       &lt;numeric&gt;\nAcvr1                                  NA               NA              NA\nAcvr2a                                 NA               NA              NA\nAhnak                                  NA               NA              NA\nAkr1c19                                NA               NA              NA\nAldh1a2                                NA               NA              NA\n...                                   ...              ...             ...\nWnt5a                                  NA               NA              NA\nWnt5b   0.0341284,0.0510860,0.0503153,...        0.0196078       0.0231579\nXist                                   NA               NA              NA\nZfp444                                 NA               NA              NA\nZfp57                                  NA               NA              NA\n\n\nAfter the permutation test we can estimate the P-values across all genes.\n\nscHOT_plotPermutationDistributions(scHOT_spatial)\n\nWarning: Use of `permstatsDF$globalHigherOrderFunction` is discouraged.\nℹ Use `globalHigherOrderFunction` instead.\n\n\nWarning: Use of `permstatsDF$stat` is discouraged.\nℹ Use `stat` instead.\n\n\nWarning: Removed 143 rows containing missing values (`geom_scattermore()`).\n\n\n\n\nscHOT_spatial &lt;- scHOT_estimatePvalues(scHOT_spatial,\n                                       nperm_estimate = 100,\n                                       maxDist = 0.1)\n\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\nno permutations found within given maxDist... using all permutations instead\n\nslot(scHOT_spatial, \"scHOT_output\")\n\nDataFrame with 165 rows and 14 columns\n             gene_1 globalHigherOrderFunction            higherOrderSequence\n        &lt;character&gt;                  &lt;matrix&gt;                  &lt;NumericList&gt;\nAcvr1         Acvr1                  0.216666 0.251205,0.275076,0.286668,...\nAcvr2a       Acvr2a                  0.375776 0.398236,0.376223,0.361763,...\nAhnak         Ahnak                  0.976418    1.23931,1.22101,1.19278,...\nAkr1c19     Akr1c19                  0.744070 0.681732,0.622183,0.625407,...\nAldh1a2     Aldh1a2                  0.245981 0.117491,0.118105,0.121221,...\n...             ...                       ...                            ...\nWnt5a         Wnt5a                  0.335820 0.282418,0.280240,0.268180,...\nWnt5b         Wnt5b                  0.220300 0.262440,0.321449,0.368172,...\nXist           Xist                  1.162241    1.18893,1.17123,1.18238,...\nZfp444       Zfp444                  0.744082 0.529888,0.531771,0.538540,...\nZfp57         Zfp57                  0.595519 0.853046,0.844188,0.838651,...\n        higherOrderStatistic numberPermutations storePermutations\n                   &lt;numeric&gt;          &lt;numeric&gt;         &lt;logical&gt;\nAcvr1              0.0750954                  0              TRUE\nAcvr2a             0.0665143                  0              TRUE\nAhnak              0.3319897                  0              TRUE\nAkr1c19            0.1673342                  0              TRUE\nAldh1a2            0.1827836                  0              TRUE\n...                      ...                ...               ...\nWnt5a               0.172300                  0              TRUE\nWnt5b               0.104924                 50              TRUE\nXist                0.120828                  0              TRUE\nZfp444              0.118930                  0              TRUE\nZfp57               0.130128                  0              TRUE\n                             permutations pvalPermutations FDRPermutations\n                            &lt;NumericList&gt;        &lt;numeric&gt;       &lt;numeric&gt;\nAcvr1                                  NA               NA              NA\nAcvr2a                                 NA               NA              NA\nAhnak                                  NA               NA              NA\nAkr1c19                                NA               NA              NA\nAldh1a2                                NA               NA              NA\n...                                   ...              ...             ...\nWnt5a                                  NA               NA              NA\nWnt5b   0.0341284,0.0510860,0.0503153,...        0.0196078       0.0231579\nXist                                   NA               NA              NA\nZfp444                                 NA               NA              NA\nZfp57                                  NA               NA              NA\n        numberPermutationsEstimated globalLowerRangeEstimated\n                          &lt;integer&gt;                 &lt;numeric&gt;\nAcvr1                           200                  0.220300\nAcvr2a                          100                  0.286168\nAhnak                          1100                  0.220300\nAkr1c19                        1100                  0.220300\nAldh1a2                         200                  0.220300\n...                             ...                       ...\nWnt5a                           150                  0.270287\nWnt5b                           200                  0.220300\nXist                             50                  1.184256\nZfp444                         1100                  0.220300\nZfp57                            50                  0.507166\n        globalUpperRangeEstimated pvalEstimated FDREstimated\n                        &lt;numeric&gt;     &lt;numeric&gt;    &lt;numeric&gt;\nAcvr1                     0.29890   0.100000000    0.1269231\nAcvr2a                    0.29890   0.290000000    0.3190000\nAhnak                     3.17142   0.000908265    0.0149864\nAkr1c19                   3.17142   0.016363636    0.0272727\nAldh1a2                   0.29890   0.004975124    0.0183333\n...                           ...           ...          ...\nWnt5a                    0.298900    0.00662252    0.0183333\nWnt5b                    0.298900    0.00497512    0.0183333\nXist                     1.184256    0.14000000    0.1673913\nZfp444                   3.171420    0.18727273    0.2145833\nZfp57                    0.507166    0.01960784    0.0272727\n\n\nWe can now examine the spatial expression of the 5 most significant genes, both in our scHOT object and over our original spe object.\n\noutput_sorted &lt;- slot(scHOT_spatial, \"scHOT_output\")[order(slot(scHOT_spatial,\n                                                                \"scHOT_output\")$pvalEstimated),]\ntopgenes &lt;- rownames(output_sorted)[1:5]\n\nreducedDim(scHOT_spatial, \"spatialCoords\") &lt;- reducedDim(spe, \"spatialCoords\")[colnames(scHOT_spatial),]\n\nfor (topgene in topgenes) {\n  g_spe &lt;- plotReducedDim(spe, \"spatialCoords\", colour_by = c(topgene), point_size = 1) +\n    coord_fixed()\n  \n  g_scHOT &lt;- plotReducedDim(scHOT_spatial, \"spatialCoords\", colour_by = c(topgene), point_size = 1,\n                           by_exprs_values = \"expression\") +\n    coord_fixed()\n  \n  g_all &lt;- g_scHOT + g_spe\n  print(g_all)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere we are noting the genes that are found to have the most statistically significant spatial variation in their local mean expression. These genes point to specific patterns that govern the development of individual parts of the gut tube.\nAdvanced/Extended Questions\n\nHow would you perform such testing over multiple distinct samples?\nscHOT is developed with all higher order testing in mind, use the associated vignette to get towards assessing changes in variation or correlation structure in space.\n\n\n## try some code"
  },
  {
    "objectID": "software.html#moleculeexperiment",
    "href": "software.html#moleculeexperiment",
    "title": "Software",
    "section": "MoleculeExperiment",
    "text": "MoleculeExperiment\n\nMoleculeExperiment contains functions to create and work with objects from the new MoleculeExperiment class. We introduce this class for analysing molecule-based spatial transcriptomics data (e.g., Xenium by 10X, Cosmx SMI by Nanostring, and Merscope by Vizgen). This allows researchers to analyse spatial transcriptomics data at the molecule level, and to have standardised data formats accross vendors."
  },
  {
    "objectID": "software.html#scmerge",
    "href": "software.html#scmerge",
    "title": "Software",
    "section": "scMerge",
    "text": "scMerge\n\nLike all gene expression data, single-cell data suffers from batch effects and other unwanted variations that makes accurate biological interpretations difficult. The scMerge method leverages factor analysis, stably expressed genes (SEGs) and (pseudo-) replicates to remove unwanted variations and merge multiple single-cell data. This package contains all the necessary functions in the scMerge pipeline, including the identification of SEGs, replication-identification methods, and merging of single-cell data."
  },
  {
    "objectID": "software.html#fusesom",
    "href": "software.html#fusesom",
    "title": "Software",
    "section": "FuseSOM",
    "text": "FuseSOM\n\nA correlation-based multiview self-organizing map for the characterization of cell types in highly multiplexed in situ imaging cytometry assays (FuseSOM) is a tool for unsupervised clustering. FuseSOM is robust and achieves high accuracy by combining a Self Organizing Map architecture and a Multiview integration of correlation based metrics. This allows FuseSOM to cluster highly multiplexed in situ imaging cytometry assays."
  },
  {
    "objectID": "software.html#treekor",
    "href": "software.html#treekor",
    "title": "Software",
    "section": "treeKor",
    "text": "treeKor\n\ntreekoR is a novel framework that aims to utilise the hierarchical nature of single cell cytometry data to find robust and interpretable associations between cell subsets and patient clinical end points. These associations are aimed to recapitulate the nested proportions prevalent in workflows inovlving manual gating, which are often overlooked in workflows using automatic clustering to identify cell populations. We developed treekoR to: Derive a hierarchical tree structure of cell clusters; quantify a cell types as a proportion relative to all cells in a sample (%total), and, as the proportion relative to a parent population (%parent); perform significance testing using the calculated proportions; and provide an interactive html visualisation to help highlight key results."
  },
  {
    "objectID": "software.html#schot",
    "href": "software.html#schot",
    "title": "Software",
    "section": "scHOT",
    "text": "scHOT\n\nSingle cell Higher Order Testing (scHOT) is an R package that facilitates testing changes in higher order structure of gene expression along either a developmental trajectory or across space. scHOT is general and modular in nature, can be run in multiple data contexts such as along a continuous trajectory, between discrete groups, and over spatial orientations; as well as accommodate any higher order measurement such as variability or correlation. scHOT meaningfully adds to first order effect testing, such as differential expression, and provides a framework for interrogating higher order interactions from single cell data."
  },
  {
    "objectID": "software.html#spicyr",
    "href": "software.html#spicyr",
    "title": "Software",
    "section": "spicyR",
    "text": "spicyR\n\nspicyR provides a series of functions to aid in the spatial analysis of any assay that can deeply phenotype individual cells and their spatial location."
  },
  {
    "objectID": "software.html#statial",
    "href": "software.html#statial",
    "title": "Software",
    "section": "Statial",
    "text": "Statial\n\nStatial is a suite of functions for identifying changes in cell state. The functionality provided by Statial provides robust quantification of cell type localisation which are invariant to changes in tissue structure. In addition to this Statial uncovers changes in marker expression associated with varying levels of localisation. These features can be used to explore how the structure and function of different cell types may be altered by the agents they are surrounded with."
  },
  {
    "objectID": "software.html#lisaclust",
    "href": "software.html#lisaclust",
    "title": "Software",
    "section": "lisaClust",
    "text": "lisaClust\n\nlisaClust provides a series of functions to identify and visualise regions of tissue where spatial associations between cell-types is similar. This package can be used to provide a high-level summary of cell-type colocalization in multiplexed imaging data that has been segmented at a single-cell resolution."
  },
  {
    "objectID": "software.html#classifyr",
    "href": "software.html#classifyr",
    "title": "Software",
    "section": "ClassifyR",
    "text": "ClassifyR\n\nClassifyR formalises a framework for classification and survival model evaluation in R. There are four stages; Data transformation, feature selection, model training, and prediction. The requirements of variable types and variable order are fixed, but specialised variables for functions can also be provided. The framework is wrapped in a driver loop that reproducibly carries out a number of cross-validation schemes. Functions for differential mean, differential variability, and differential distribution are included. Additional functions may be developed by the user, by creating an interface to the framework."
  }
]